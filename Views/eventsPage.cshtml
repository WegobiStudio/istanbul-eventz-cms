@using Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IPublishedContent>

@{
    Layout = "master.cshtml";
    var eventItems = Model.Value<IEnumerable<BlockListItem>>("eventCards")?.Select(x => x.Content);
}

<div class="about-us">
    <div class="page-title-container">
        <h2>@(Model.Value<string>("pageTitle"))</h2>
        <div>
            <span>@(Model.Value<string>("pageSubtitle"))</span>
            <p class="support-text">@(Model.Value<string>("pageDescription"))</p>
        </div>
    </div>
    <div class="last-events" style="border-bottom: 0;">
        <div class="last-events-cards">
            <div class="left">
                @if (eventItems != null)
                {
                    foreach (var eventItem in eventItems.Take(3))
                    {
                        <div class="last-events-card-item">
                            <a href="@(eventItem.Value<IPublishedContent>("eventLink")?.Url() ?? "#")"></a>
                            <div class="image">
                                <img src="@(eventItem.Value<IPublishedContent>("eventImage")?.Url() ?? "#")" alt="@(eventItem.Value<string>("eventTitle"))">
                            </div>
                            <div class="content">
                                <h5>
                                    <div>@(eventItem.Value<string>("eventTitle"))</div>
                                    <div class="icon">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="32" viewBox="0 0 38 32" fill="none">
                                            <path d="M25.6665 5L36.6665 16L25.6665 27" stroke="white" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                                            <path d="M1.6665 16L35.6665 16" stroke="white" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </div>
                                </h5>
                                <span>@(eventItem.Value<string>("eventDescription"))</span>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="right">
                @if (eventItems != null)
                {
                    foreach (var eventItem in eventItems.Skip(3).Take(3))
                    {
                        <div class="last-events-card-item @(eventItem == eventItems.Skip(3).Take(3).ElementAt(1) ? "bigger" : "")">
                            <a href="@(eventItem.Value<IPublishedContent>("eventLink")?.Url() ?? "#")"></a>
                            <div class="image">
                                <img src="@(eventItem.Value<IPublishedContent>("eventImage")?.Url() ?? "#")" alt="@(eventItem.Value<string>("eventTitle"))">
                            </div>
                            <div class="content">
                                <h5>
                                    <div>@(eventItem.Value<string>("eventTitle"))</div>
                                    <div class="icon">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="38" height="32" viewBox="0 0 38 32" fill="none">
                                            <path d="M25.6665 5L36.6665 16L25.6665 27" stroke="white" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                                            <path d="M1.6665 16L35.6665 16" stroke="white" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </div>
                                </h5>
                                <span>@(eventItem.Value<string>("eventDescription"))</span>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>